{"version":3,"sources":["../../src/components/index.js","../../src/index.js","App.js","index.js"],"names":["EffectScreen","props","useState","show","setShow","iconEffect","setIconEffect","number","icon","delayTime","useEffect","backgroundId","document","timer","setTimeout","icons","index","id","clearTimeout","className","styles","Object","key","item","role","aria-label","PropTypes","ExampleComponent","text","App","ReactDOM","render","getElementById"],"mappings":"gPAIMA,EAAe,SAACC,GAAU,MACNC,oBADM,GACvBC,EADuB,KACjBC,EADiB,OAGMF,mBAHN,IAGvBG,EAHuB,KAGXC,EAHW,KAKtBC,EAA4BN,EALN,OAKdO,EAAoBP,EALN,KAKRQ,EAAcR,EALN,UA+B9B,OAxBAS,qBAAU,WACRN,MACA,IAAMO,EAAeC,wBAArB,6BACIC,EAAJ,KACAF,gCAEE,YACEP,MACAS,EAAQC,YAAW,WACjBV,QADFS,MAJJF,GAWA,IADA,IAAMI,EAAN,GACSC,EAAT,EAAoBA,EAApB,EAAoCA,IAClCD,KAAe,CAAEE,GAAF,EAAaT,QAI9B,OAFAF,KAEO,WACLY,mBAED,CAACX,EAAQC,EAvBZE,IAyBE,yBAAKO,GAAG,6BACN,yBAAKE,UAAWC,GACd,kCACGjB,GACCkB,OAAA,eAA8B,mBAC5B,+BAAWC,IAAKC,EAAKN,IACnB,0BAAMO,KAAN,MAAiBC,aAAW,iBACzBF,EAHuB,cAa1CvB,YAAyB,CACvBQ,KAAMkB,IADiB,OAEvBnB,OAAQmB,IAFe,OAGvBjB,UAAWiB,IAAUnB,QAGvBP,eAA4B,CAC1BQ,KAD0B,eAE1BD,OAF0B,GAG1BE,UAAW,K,IC1DAkB,EAAmB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACjC,OAAO,yBAAKT,UAAWC,GAAhB,sBAAP,I,MCSaS,MATH,IAER,6BACE,kBAAC,EAAD,CAAkBD,KAAK,8CACvB,kBAAC,EAAD,CAAcpB,KAAK,kBCHzBsB,IAASC,OAAO,kBAAC,EAAD,MAASnB,SAASoB,eAAe,U","file":"static/js/main.fefc90f1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './styles.scss'\n\nconst EffectScreen = (props) => {\n  const [show, setShow] = useState(true)\n\n  const [iconEffect, setIconEffect] = useState({})\n\n  const { number, icon, delayTime } = props\n\n  useEffect(() => {\n    setShow(true)\n    const backgroundId = document.getElementById('background-effect-library')\n    let timer = null\n    backgroundId.addEventListener(\n      'mousemove',\n      (event) => {\n        setShow(false)\n        timer = setTimeout(() => {\n          setShow(true)\n        }, delayTime)\n      },\n      false\n    )\n    const icons = {}\n    for (let index = 0; index < number; index++) {\n      icons[index] = { id: index, icon }\n    }\n    setIconEffect(icons)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [number, icon, delayTime])\n  return (\n    <div id='background-effect-library'>\n      <div className={styles.backgroundEffectLibrary}>\n        <snowfall>\n          {show &&\n            Object.values(iconEffect).map((item) => (\n              <snowflake key={item.id}>\n                <span role='img' aria-label='peach-blossom'>\n                  {item.icon}\n                </span>\n              </snowflake>\n            ))}\n        </snowfall>\n      </div>\n    </div>\n  )\n}\n\nEffectScreen.propTypes = {\n  icon: PropTypes.string,\n  number: PropTypes.number,\n  delayTime: PropTypes.number\n}\n\nEffectScreen.defaultProps = {\n  icon: 'ðŸŒ¸',\n  number: 10,\n  delayTime: 5000\n}\n\nexport { EffectScreen }\n","import React from 'react'\nimport styles from './styles.module.css'\nimport { EffectScreen } from './components/index'\n\nexport const ExampleComponent = ({ text }) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\nexport { EffectScreen }\n","import React from 'react'\n\nimport { ExampleComponent, EffectScreen } from 'screen-effect'\nimport 'screen-effect/dist/index.css'\n\nconst App = () => {\n  return (\n    <div>\n      <ExampleComponent text='Create React Library Example ðŸ˜„' />\n      <EffectScreen icon='ðŸ˜†' />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}